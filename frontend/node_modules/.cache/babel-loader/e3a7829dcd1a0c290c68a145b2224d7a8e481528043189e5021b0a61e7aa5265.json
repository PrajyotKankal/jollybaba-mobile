{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\JollyBaba\\\\jollybaba-mobile\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  useEffect(() => {\n    const loadGoogleScript = () => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://accounts.google.com/gsi/client\";\n      script.async = true;\n      script.defer = true;\n      script.onload = initializeGoogleSSO;\n      document.body.appendChild(script);\n    };\n    const initializeGoogleSSO = () => {\n      /* global google */\n      if (window.google) {\n        google.accounts.id.initialize({\n          client_id: \"890174912323-ehq52mrde95htt1q0j7c36no7cqua86h.apps.googleusercontent.com\",\n          callback: handleGoogleLogin\n        });\n        google.accounts.id.renderButton(document.getElementById(\"googleDiv\"), {\n          theme: \"outline\",\n          size: \"large\"\n        });\n        google.accounts.id.prompt(); // optional\n      }\n    };\n    loadGoogleScript();\n  }, []);\n  const handleGoogleLogin = async response => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/auth/google-login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          idToken: response.credential\n        })\n      });\n      const data = await res.json();\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n        const decoded = JSON.parse(atob(data.token.split(\".\")[1]));\n        if (decoded.role === \"admin\") {\n          window.location.href = \"/admin\";\n        } else {\n          alert(\"❌ Access denied: Not an admin.\");\n        }\n      } else {\n        alert(\"❌ Login failed\");\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      alert(\"❌ Something went wrong\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"100px\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login as Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"googleDiv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","LoginPage","_s","loadGoogleScript","script","document","createElement","src","async","defer","onload","initializeGoogleSSO","body","appendChild","window","google","accounts","id","initialize","client_id","callback","handleGoogleLogin","renderButton","getElementById","theme","size","prompt","response","res","fetch","method","headers","JSON","stringify","idToken","credential","data","json","token","localStorage","setItem","decoded","parse","atob","split","role","location","href","alert","err","console","error","style","textAlign","marginTop","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/JollyBaba/jollybaba-mobile/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nconst LoginPage = () => {\r\n  useEffect(() => {\r\n    const loadGoogleScript = () => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"https://accounts.google.com/gsi/client\";\r\n      script.async = true;\r\n      script.defer = true;\r\n      script.onload = initializeGoogleSSO;\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    const initializeGoogleSSO = () => {\r\n      /* global google */\r\n      if (window.google) {\r\n        google.accounts.id.initialize({\r\n          client_id:\r\n            \"890174912323-ehq52mrde95htt1q0j7c36no7cqua86h.apps.googleusercontent.com\",\r\n          callback: handleGoogleLogin,\r\n        });\r\n\r\n        google.accounts.id.renderButton(document.getElementById(\"googleDiv\"), {\r\n          theme: \"outline\",\r\n          size: \"large\",\r\n        });\r\n\r\n        google.accounts.id.prompt(); // optional\r\n      }\r\n    };\r\n\r\n    loadGoogleScript();\r\n  }, []);\r\n\r\n  const handleGoogleLogin = async (response) => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/auth/google-login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ idToken: response.credential }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (data.token) {\r\n        localStorage.setItem(\"token\", data.token);\r\n\r\n        const decoded = JSON.parse(atob(data.token.split(\".\")[1]));\r\n        if (decoded.role === \"admin\") {\r\n          window.location.href = \"/admin\";\r\n        } else {\r\n          alert(\"❌ Access denied: Not an admin.\");\r\n        }\r\n      } else {\r\n        alert(\"❌ Login failed\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      alert(\"❌ Something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"100px\", fontFamily: \"sans-serif\" }}>\r\n      <h2>Login as Admin</h2>\r\n      <div id=\"googleDiv\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}