{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\JollyBaba\\\\jollybaba-mobile\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\n// src/context/CartContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('jollybaba_cart');\n    if (savedCart) {\n      try {\n        const parsed = JSON.parse(savedCart);\n        if (Array.isArray(parsed)) {\n          setCart(parsed);\n        } else {\n          console.warn('Invalid cart data in localStorage');\n        }\n      } catch (err) {\n        console.error('Error parsing cart from localStorage:', err);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage on every change\n  useEffect(() => {\n    localStorage.setItem('jollybaba_cart', JSON.stringify(cart));\n  }, [cart]);\n\n  // Add item\n  const addToCart = mobile => {\n    if (!mobile || !mobile._id) return;\n    if (cart.find(item => item._id === mobile._id)) return;\n    if (cart.length >= 20) {\n      alert(\"❌ You can only add up to 20 mobiles in the cart.\");\n      return;\n    }\n    setCart([...cart, mobile]);\n  };\n\n  // Remove item\n  const removeFromCart = id => {\n    setCart(cart.filter(item => item._id !== id));\n  };\n\n  // Clear all\n  const clearCart = () => {\n    setCart([]);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"gPYbNUmWK8tVVPcrFDrHV23HVlE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","savedCart","localStorage","getItem","parsed","JSON","parse","Array","isArray","console","warn","err","error","setItem","stringify","addToCart","mobile","_id","find","item","length","alert","removeFromCart","id","filter","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/JollyBaba/jollybaba-mobile/frontend/src/context/CartContext.js"],"sourcesContent":["// src/context/CartContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // Load cart from localStorage on mount\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('jollybaba_cart');\r\n    if (savedCart) {\r\n      try {\r\n        const parsed = JSON.parse(savedCart);\r\n        if (Array.isArray(parsed)) {\r\n          setCart(parsed);\r\n        } else {\r\n          console.warn('Invalid cart data in localStorage');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error parsing cart from localStorage:', err);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save cart to localStorage on every change\r\n  useEffect(() => {\r\n    localStorage.setItem('jollybaba_cart', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  // Add item\r\n  const addToCart = (mobile) => {\r\n    if (!mobile || !mobile._id) return;\r\n\r\n    if (cart.find((item) => item._id === mobile._id)) return;\r\n\r\n    if (cart.length >= 20) {\r\n      alert(\"❌ You can only add up to 20 mobiles in the cart.\");\r\n      return;\r\n    }\r\n\r\n    setCart([...cart, mobile]);\r\n  };\r\n\r\n  // Remove item\r\n  const removeFromCart = (id) => {\r\n    setCart(cart.filter((item) => item._id !== id));\r\n  };\r\n\r\n  // Clear all\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        addToCart,\r\n        removeFromCart,\r\n        clearCart,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACxD,IAAIF,SAAS,EAAE;MACb,IAAI;QACF,MAAMG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;QACpC,IAAIM,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;UACzBJ,OAAO,CAACI,MAAM,CAAC;QACjB,CAAC,MAAM;UACLK,OAAO,CAACC,IAAI,CAAC,mCAAmC,CAAC;QACnD;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZF,OAAO,CAACG,KAAK,CAAC,uCAAuC,EAAED,GAAG,CAAC;MAC7D;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnB,SAAS,CAAC,MAAM;IACdU,YAAY,CAACW,OAAO,CAAC,gBAAgB,EAAER,IAAI,CAACS,SAAS,CAACf,IAAI,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMgB,SAAS,GAAIC,MAAM,IAAK;IAC5B,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACC,GAAG,EAAE;IAE5B,IAAIlB,IAAI,CAACmB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,GAAG,KAAKD,MAAM,CAACC,GAAG,CAAC,EAAE;IAElD,IAAIlB,IAAI,CAACqB,MAAM,IAAI,EAAE,EAAE;MACrBC,KAAK,CAAC,kDAAkD,CAAC;MACzD;IACF;IAEArB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEiB,MAAM,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMM,cAAc,GAAIC,EAAE,IAAK;IAC7BvB,OAAO,CAACD,IAAI,CAACyB,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACF,GAAG,KAAKM,EAAE,CAAC,CAAC;EACjD,CAAC;;EAED;EACA,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBzB,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IACnBC,KAAK,EAAE;MACL5B,IAAI;MACJgB,SAAS;MACTO,cAAc;MACdG;IACF,CAAE;IAAA5B,QAAA,EAEDA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjC,EAAA,CA7DWF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}