{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\JollyBaba\\\\jollybaba-mobile\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const handleGoogleLogin = async response => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/auth/google-login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          idToken: response.credential\n        })\n      });\n      const data = await res.json();\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n        const decodedToken = JSON.parse(atob(data.token.split(\".\")[1]));\n        if (decodedToken.role === \"admin\") {\n          window.location.href = \"/admin\";\n        } else {\n          alert(\"‚õî Access Denied: You do not have admin privileges.\");\n        }\n      } else {\n        alert(\"‚ùå Login failed. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Google Login Error:\", error);\n      alert(\"‚ùå An unexpected error occurred during login.\");\n    }\n  };\n  useEffect(() => {\n    const initializeGoogleButton = () => {\n      var _window$google;\n      if ((_window$google = window.google) !== null && _window$google !== void 0 && _window$google.accounts) {\n        window.google.accounts.id.initialize({\n          client_id: \"890174912323-ehq52mrde95htt1q0j7c36no7cqua86h.apps.googleusercontent.com\",\n          callback: handleGoogleLogin\n        });\n        window.google.accounts.id.renderButton(document.getElementById(\"googleSignInDiv\"), {\n          theme: \"outline\",\n          size: \"large\"\n        });\n      } else {\n        setTimeout(initializeGoogleButton, 100);\n      }\n    };\n    initializeGoogleButton();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDD10 Admin Access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please sign in with your authorized Google account to continue.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"googleSignInDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","LoginPage","_s","handleGoogleLogin","response","res","fetch","method","headers","body","JSON","stringify","idToken","credential","data","json","token","localStorage","setItem","decodedToken","parse","atob","split","role","window","location","href","alert","error","console","initializeGoogleButton","_window$google","google","accounts","id","initialize","client_id","callback","renderButton","document","getElementById","theme","size","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/JollyBaba/jollybaba-mobile/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = () => {\r\n  const handleGoogleLogin = async (response) => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/auth/google-login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ idToken: response.credential }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (data.token) {\r\n        localStorage.setItem(\"token\", data.token);\r\n\r\n        const decodedToken = JSON.parse(atob(data.token.split(\".\")[1]));\r\n\r\n        if (decodedToken.role === \"admin\") {\r\n          window.location.href = \"/admin\";\r\n        } else {\r\n          alert(\"‚õî Access Denied: You do not have admin privileges.\");\r\n        }\r\n      } else {\r\n        alert(\"‚ùå Login failed. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Google Login Error:\", error);\r\n      alert(\"‚ùå An unexpected error occurred during login.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeGoogleButton = () => {\r\n      if (window.google?.accounts) {\r\n        window.google.accounts.id.initialize({\r\n          client_id: \"890174912323-ehq52mrde95htt1q0j7c36no7cqua86h.apps.googleusercontent.com\",\r\n          callback: handleGoogleLogin,\r\n        });\r\n\r\n        window.google.accounts.id.renderButton(\r\n          document.getElementById(\"googleSignInDiv\"),\r\n          { theme: \"outline\", size: \"large\" }\r\n        );\r\n      } else {\r\n        setTimeout(initializeGoogleButton, 100);\r\n      }\r\n    };\r\n\r\n    initializeGoogleButton();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <div className=\"login-card\">\r\n        <h2>üîê Admin Access</h2>\r\n        <p>Please sign in with your authorized Google account to continue.</p>\r\n        <div id=\"googleSignInDiv\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}